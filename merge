#!/bin/bash

usage() {
	[ ! -z "$2" ] && echo "Error: $2."
	echo "Usage: $0 -s <path/to/source> -t <path/to/target> [-i -e <backup-extension>]"
	echo "Options:"
	echo -e "\t-i\tOverwrite files without backup."
	echo -e "\t-e\tBackup extension. Default: \"-dpkg\""
	exit $1
}

sync() {
	# copy directory structure
	for d in `find $SRC -type d`; do
		[ $d == "$SRC" ] && continue
		CDIR=$(echo $d | sed "s|$SRC||")
		[ ! -d "$DST$CDIR" ] && echo "Making $CDIR" && mkdir -p "$DST$CDIR"
	done

	# copy files backing up existing
	for f in `find $SRC -type f`; do
		CFILE=$(echo $f | sed "s|$SRC||")
		$BKP && [ -f "$DST$CFILE" ] && echo "Backing up $CFILE to $(basename $CFILE)$EXT" && cp "$DST$CFILE" "$DST$CFILE$EXT"
		echo "Copying $CFILE"
		cp -f "$f" "$DST$CFILE"
	done
}

# checks
if [ "$(whoami)" != "root" ]; then
	echo "You are currently not running the script as root."
	echo "If you wish to modify a CHROOT environment, you will probably need it."
	read -p "Do you wish to continue as $(whoami)? [y/n]: " r
	case "$r" in
		n|N|no|No|nO ) exit 0 ;;
		y|Y|yes|Yes|yES ) ;;
		* ) echo "Not a valid answer. Quitting."; exit 1 ;;
	esac
fi

# get options
BKP=true # Making backups is default.
EXT="-dpkg"
OPTSTR="hs:t:ie:"
while getopts "$OPTSTR" OPT; do
	case "$OPT" in
		h) usage ;;
    s) SRC=$OPTARG ;;
		t) DST=$OPTARG ;;
		i) BKP=false ;;
		e) EXT=$OPTARG ;;
		"?") usage 2 "Unknown option: -$OPTARG" ;;
		":") usage 3 "No argument value for option: -$OPTARG" ;;
	esac
done

if [ ! -z "$SRC" ] && [ ! -z "$DST" ]; then
	sync
else
	usage 4 "Missing options"
fi
